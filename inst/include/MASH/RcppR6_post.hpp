// Generated by RcppR6 (0.2.4): do not edit by hand
#ifndef _MASH_RCPPR6_POST_HPP_
#define _MASH_RCPPR6_POST_HPP_

#include <Rcpp.h>
#include <MASH/RcppR6_support.hpp>

namespace MASH {
namespace RcppR6 {
namespace traits {
template <> inline std::string   class_name_r<MASH::HumanEventQ >() {return "HumanEventQ";}
template <> inline std::string   package_name<MASH::HumanEventQ >() {return "MASH";}
template <> inline std::string generator_name<MASH::HumanEventQ >() {return ".R6_HumanEventQ";}
template <> inline std::string   class_name_r<MASH::HistoryGeneric >() {return "HistoryGeneric";}
template <> inline std::string   package_name<MASH::HistoryGeneric >() {return "MASH";}
template <> inline std::string generator_name<MASH::HistoryGeneric >() {return ".R6_HistoryGeneric";}
template <> inline std::string   class_name_r<MASH::HistoryTravel >() {return "HistoryTravel";}
template <> inline std::string   package_name<MASH::HistoryTravel >() {return "MASH";}
template <> inline std::string generator_name<MASH::HistoryTravel >() {return ".R6_HistoryTravel";}
template <> inline std::string   class_name_r<MASH::humanPfSI >() {return "humanPfSI";}
template <> inline std::string   package_name<MASH::humanPfSI >() {return "MASH";}
template <> inline std::string generator_name<MASH::humanPfSI >() {return ".R6_humanPfSI";}
template <> inline std::string   class_name_r<MASH::mosquitoPfSI >() {return "mosquitoPfSI";}
template <> inline std::string   package_name<MASH::mosquitoPfSI >() {return "MASH";}
template <> inline std::string generator_name<MASH::mosquitoPfSI >() {return ".R6_mosquitoPfSI";}
template <> inline std::string   class_name_r<MASH::humanPfMOI >() {return "humanPfMOI";}
template <> inline std::string   package_name<MASH::humanPfMOI >() {return "MASH";}
template <> inline std::string generator_name<MASH::humanPfMOI >() {return ".R6_humanPfMOI";}
template <> inline std::string   class_name_r<MASH::mosquitoPfMOI >() {return "mosquitoPfMOI";}
template <> inline std::string   package_name<MASH::mosquitoPfMOI >() {return "MASH";}
template <> inline std::string generator_name<MASH::mosquitoPfMOI >() {return ".R6_mosquitoPfMOI";}
template <> inline std::string   class_name_r<MASH::RiskQ >() {return "RiskQ";}
template <> inline std::string   package_name<MASH::RiskQ >() {return "MASH";}
template <> inline std::string generator_name<MASH::RiskQ >() {return ".R6_RiskQ";}
template <> inline std::string   class_name_r<MASH::ImagoQ >() {return "ImagoQ";}
template <> inline std::string   package_name<MASH::ImagoQ >() {return "MASH";}
template <> inline std::string generator_name<MASH::ImagoQ >() {return ".R6_ImagoQ";}
template <> inline std::string   class_name_r<MASH::EggQ >() {return "EggQ";}
template <> inline std::string   package_name<MASH::EggQ >() {return "MASH";}
template <> inline std::string generator_name<MASH::EggQ >() {return ".R6_EggQ";}
template <> inline std::string   class_name_r<MASH::EL4P >() {return "EL4P";}
template <> inline std::string   package_name<MASH::EL4P >() {return "MASH";}
template <> inline std::string generator_name<MASH::EL4P >() {return ".R6_EL4P";}
template <> inline std::string   class_name_r<MASH::MosquitoFemaleHistory >() {return "MosquitoFemaleHistory";}
template <> inline std::string   package_name<MASH::MosquitoFemaleHistory >() {return "MASH";}
template <> inline std::string generator_name<MASH::MosquitoFemaleHistory >() {return ".R6_MosquitoFemaleHistory";}
}
}
}

namespace Rcpp {
template <typename T>
SEXP wrap(const MASH::RcppR6::RcppR6<T>& x) {
  return x.to_R6();
}

namespace traits {
template <typename T>
class Exporter<MASH::RcppR6::RcppR6<T> > {
public:
  Exporter(SEXP x) : obj(MASH::RcppR6::RcppR6<T>(x)) {}
  inline MASH::RcppR6::RcppR6<T> get() { return obj; }
private:
  MASH::RcppR6::RcppR6<T> obj;
};
}

template <> inline SEXP wrap(const MASH::HumanEventQ& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::HumanEventQ>(x));
}
template <> inline MASH::HumanEventQ as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::HumanEventQ>(x));
}
template <> inline SEXP wrap(const MASH::HistoryGeneric& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::HistoryGeneric>(x));
}
template <> inline MASH::HistoryGeneric as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::HistoryGeneric>(x));
}
template <> inline SEXP wrap(const MASH::HistoryTravel& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::HistoryTravel>(x));
}
template <> inline MASH::HistoryTravel as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::HistoryTravel>(x));
}
template <> inline SEXP wrap(const MASH::humanPfSI& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::humanPfSI>(x));
}
template <> inline MASH::humanPfSI as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::humanPfSI>(x));
}
template <> inline SEXP wrap(const MASH::mosquitoPfSI& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::mosquitoPfSI>(x));
}
template <> inline MASH::mosquitoPfSI as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::mosquitoPfSI>(x));
}
template <> inline SEXP wrap(const MASH::humanPfMOI& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::humanPfMOI>(x));
}
template <> inline MASH::humanPfMOI as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::humanPfMOI>(x));
}
template <> inline SEXP wrap(const MASH::mosquitoPfMOI& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::mosquitoPfMOI>(x));
}
template <> inline MASH::mosquitoPfMOI as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::mosquitoPfMOI>(x));
}
template <> inline SEXP wrap(const MASH::RiskQ& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::RiskQ>(x));
}
template <> inline MASH::RiskQ as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::RiskQ>(x));
}
template <> inline SEXP wrap(const MASH::ImagoQ& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::ImagoQ>(x));
}
template <> inline MASH::ImagoQ as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::ImagoQ>(x));
}
template <> inline SEXP wrap(const MASH::EggQ& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::EggQ>(x));
}
template <> inline MASH::EggQ as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::EggQ>(x));
}
template <> inline SEXP wrap(const MASH::EL4P& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::EL4P>(x));
}
template <> inline MASH::EL4P as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::EL4P>(x));
}
template <> inline SEXP wrap(const MASH::MosquitoFemaleHistory& x) {
  return wrap(MASH::RcppR6::RcppR6<MASH::MosquitoFemaleHistory>(x));
}
template <> inline MASH::MosquitoFemaleHistory as(SEXP x) {
  return *(MASH::RcppR6::RcppR6<MASH::MosquitoFemaleHistory>(x));
}
}

#endif
